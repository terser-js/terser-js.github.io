"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[491],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),s=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(l.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=s(t),d=i,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return t?a.createElement(f,r(r({ref:n},c),{},{components:t})):a.createElement(f,r({ref:n},c))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=d;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[m]="string"==typeof e?e:i,r[1]=p;for(var s=2;s<o;s++)r[s]=t[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1082:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var a=t(7462),i=(t(7294),t(3905));const o={id:"api-reference",title:"API Reference",sidebar_label:"API Reference"},r=void 0,p={unversionedId:"api-reference",id:"api-reference",title:"API Reference",description:"Assuming installation via NPM, you can load Terser in your application",source:"@site/docs/api-reference.md",sourceDirName:".",slug:"/api-reference",permalink:"/docs/api-reference",draft:!1,tags:[],version:"current",frontMatter:{id:"api-reference",title:"API Reference",sidebar_label:"API Reference"},sidebar:"tutorialSidebar",next:{title:"CLI Usage",permalink:"/docs/cli-usage"}},l={},s=[{value:"Minify options",id:"minify-options",level:2},{value:"Minify options structure",id:"minify-options-structure",level:2},{value:"Source map options",id:"source-map-options",level:3}],c={toc:s},m="wrapper";function u(e){let{components:n,...t}=e;return(0,i.kt)(m,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Assuming installation via NPM, you can load Terser in your application\nlike this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'const { minify } = require("terser");\n')),(0,i.kt)("p",null,"Or,"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'import { minify } from "terser";\n')),(0,i.kt)("p",null,"Browser loading is also supported:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<script src="https://cdn.jsdelivr.net/npm/source-map@0.7.3/dist/source-map.js"><\/script>\n<script src="https://cdn.jsdelivr.net/npm/terser/dist/bundle.min.js"><\/script>\n')),(0,i.kt)("p",null,"There is a single async high level function, ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"async minify(code, options)")),",\nwhich will perform all minification ",(0,i.kt)("a",{parentName:"p",href:"/docs/api-reference#minify-options"},"phases")," in a configurable\nmanner. By default ",(0,i.kt)("inlineCode",{parentName:"p"},"minify()")," will enable ",(0,i.kt)("a",{parentName:"p",href:"/docs/options#compress-options"},(0,i.kt)("inlineCode",{parentName:"a"},"compress")),"\nand ",(0,i.kt)("a",{parentName:"p",href:"/docs/options#mangle-options"},(0,i.kt)("inlineCode",{parentName:"a"},"mangle")),". Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'var code = "function add(first, second) { return first + second; }";\nvar result = await minify(code, { sourceMap: true });\nconsole.log(result.code);  // minified output: function add(n,d){return n+d}\nconsole.log(result.map);  // source map\n')),(0,i.kt)("p",null,"You can ",(0,i.kt)("inlineCode",{parentName:"p"},"minify")," more than one JavaScript file at a time by using an object\nfor the first argument where the keys are file names and the values are source\ncode:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'var code = {\n    "file1.js": "function add(first, second) { return first + second; }",\n    "file2.js": "console.log(add(1 + 2, 3 + 4));"\n};\nvar result = await minify(code);\nconsole.log(result.code);\n// function add(d,n){return d+n}console.log(add(3,7));\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"toplevel")," option:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'var code = {\n    "file1.js": "function add(first, second) { return first + second; }",\n    "file2.js": "console.log(add(1 + 2, 3 + 4));"\n};\nvar options = { toplevel: true };\nvar result = await minify(code, options);\nconsole.log(result.code);\n// console.log(3+7);\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"nameCache")," option:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'var options = {\n    mangle: {\n        toplevel: true,\n    },\n    nameCache: {}\n};\nvar result1 = await minify({\n    "file1.js": "function add(first, second) { return first + second; }"\n}, options);\nvar result2 = await minify({\n    "file2.js": "console.log(add(1 + 2, 3 + 4));"\n}, options);\nconsole.log(result1.code);\n// function n(n,r){return n+r}\nconsole.log(result2.code);\n// console.log(n(3,7));\n')),(0,i.kt)("p",null,"You may persist the name cache to the file system in the following way:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'var cacheFileName = "/tmp/cache.json";\nvar options = {\n    mangle: {\n        properties: true,\n    },\n    nameCache: JSON.parse(fs.readFileSync(cacheFileName, "utf8"))\n};\nfs.writeFileSync("part1.js", await minify({\n    "file1.js": fs.readFileSync("file1.js", "utf8"),\n    "file2.js": fs.readFileSync("file2.js", "utf8")\n}, options).code, "utf8");\nfs.writeFileSync("part2.js", await minify({\n    "file3.js": fs.readFileSync("file3.js", "utf8"),\n    "file4.js": fs.readFileSync("file4.js", "utf8")\n}, options).code, "utf8");\nfs.writeFileSync(cacheFileName, JSON.stringify(options.nameCache), "utf8");\n')),(0,i.kt)("p",null,"An example of a combination of ",(0,i.kt)("inlineCode",{parentName:"p"},"minify()")," options:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'var code = {\n    "file1.js": "function add(first, second) { return first + second; }",\n    "file2.js": "console.log(add(1 + 2, 3 + 4));"\n};\nvar options = {\n    toplevel: true,\n    compress: {\n        global_defs: {\n            "@console.log": "alert"\n        },\n        passes: 2\n    },\n    format: {\n        preamble: "/* minified */"\n    }\n};\nvar result = await minify(code, options);\nconsole.log(result.code);\n// /* minified */\n// alert(10);"\n')),(0,i.kt)("p",null,"An error example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'try {\n    const result = await minify({"foo.js" : "if (0) else console.log(1);"});\n    // Do something with result\n} catch (error) {\n    const { message, filename, line, col, pos } = error;\n    // Do something with error\n}\n')),(0,i.kt)("h2",{id:"minify-options"},"Minify options"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"ecma")," (default ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined"),") - pass ",(0,i.kt)("inlineCode",{parentName:"p"},"5"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"2015"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"2016"),", etc to override\n",(0,i.kt)("inlineCode",{parentName:"p"},"compress")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"format"),"'s ",(0,i.kt)("inlineCode",{parentName:"p"},"ecma")," options.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"enclose")," (default ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),") - pass ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", or a string in the format\nof ",(0,i.kt)("inlineCode",{parentName:"p"},'"args[:values]"'),", where ",(0,i.kt)("inlineCode",{parentName:"p"},"args")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"values")," are comma-separated\nargument names and values, respectively, to embed the output in a big\nfunction with the configurable arguments and values.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"parse")," (default ",(0,i.kt)("inlineCode",{parentName:"p"},"{}"),") \u2014 pass an object if you wish to specify some\nadditional ",(0,i.kt)("a",{parentName:"p",href:"/docs/options#parse-options"},"parse options"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"compress")," (default ",(0,i.kt)("inlineCode",{parentName:"p"},"{}"),") \u2014 pass ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," to skip compressing entirely.\nPass an object to specify custom ",(0,i.kt)("a",{parentName:"p",href:"/docs/options#compress-options"},"compress options"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"mangle")," (default ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),") \u2014 pass ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," to skip mangling names, or pass\nan object to specify ",(0,i.kt)("a",{parentName:"p",href:"/docs/options#mangle-options"},"mangle options")," (see below)."),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mangle.properties")," (default ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),") \u2014 a subcategory of the mangle option.\nPass an object to specify custom ",(0,i.kt)("a",{parentName:"li",href:"/docs/options#mangle-properties-options"},"mangle property options"),"."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"module")," (default ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),') \u2014 Use when minifying an ES6 module. "use strict"\nis implied and names can be mangled on the top scope. If ',(0,i.kt)("inlineCode",{parentName:"p"},"compress")," or\n",(0,i.kt)("inlineCode",{parentName:"p"},"mangle")," is enabled then the ",(0,i.kt)("inlineCode",{parentName:"p"},"toplevel")," option will be enabled.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"format")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"output")," (default ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),") \u2014 pass an object if you wish to specify\nadditional ",(0,i.kt)("a",{parentName:"p",href:"/docs/options#format-options"},"format options"),".  The defaults are optimized\nfor best compression.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"sourceMap")," (default ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),") - pass an object if you wish to specify\n",(0,i.kt)("a",{parentName:"p",href:"/docs/api-reference#source-map-options"},"source map options"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"toplevel")," (default ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),") - set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if you wish to enable top level\nvariable and function name mangling and to drop unused variables and functions.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"nameCache")," (default ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),") - pass an empty object ",(0,i.kt)("inlineCode",{parentName:"p"},"{}")," or a previously\nused ",(0,i.kt)("inlineCode",{parentName:"p"},"nameCache")," object if you wish to cache mangled variable and\nproperty names across multiple invocations of ",(0,i.kt)("inlineCode",{parentName:"p"},"minify()"),". Note: this is\na read/write property. ",(0,i.kt)("inlineCode",{parentName:"p"},"minify()")," will read the name cache state of this\nobject and update it during minification so that it may be\nreused or externally persisted by the user.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"ie8")," (default ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),") - set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," to support IE8.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"keep_classnames")," (default: ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined"),") - pass ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," to prevent discarding or mangling\nof class names. Pass a regular expression to only keep class names matching that regex.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"keep_fnames")," (default: ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),") - pass ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," to prevent discarding or mangling\nof function names. Pass a regular expression to only keep function names matching that regex.\nUseful for code relying on ",(0,i.kt)("inlineCode",{parentName:"p"},"Function.prototype.name"),". If the top level minify option\n",(0,i.kt)("inlineCode",{parentName:"p"},"keep_classnames")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," it will be overridden with the value of the top level\nminify option ",(0,i.kt)("inlineCode",{parentName:"p"},"keep_fnames"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"safari10")," (default: ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),") - pass ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," to work around Safari 10/11 bugs in\nloop scoping and ",(0,i.kt)("inlineCode",{parentName:"p"},"await"),". See ",(0,i.kt)("inlineCode",{parentName:"p"},"safari10")," options in ",(0,i.kt)("a",{parentName:"p",href:"/docs/options#mangle-options"},(0,i.kt)("inlineCode",{parentName:"a"},"mangle")),"\nand ",(0,i.kt)("a",{parentName:"p",href:"/docs/options#format-options"},(0,i.kt)("inlineCode",{parentName:"a"},"format"))," for details."))),(0,i.kt)("h2",{id:"minify-options-structure"},"Minify options structure"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n    parse: {\n        // parse options\n    },\n    compress: {\n        // compress options\n    },\n    mangle: {\n        // mangle options\n\n        properties: {\n            // mangle property options\n        }\n    },\n    format: {\n        // format options (can also use `output` for backwards compatibility)\n    },\n    sourceMap: {\n        // source map options\n    },\n    ecma: 5, // specify one of: 5, 2015, 2016, etc.\n    enclose: false, // or specify true, or "args:values"\n    keep_classnames: false,\n    keep_fnames: false,\n    ie8: false,\n    module: false,\n    nameCache: null, // or specify a name cache object\n    safari10: false,\n    toplevel: false\n}\n')),(0,i.kt)("h3",{id:"source-map-options"},"Source map options"),(0,i.kt)("p",null,"To generate a source map:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'var result = await minify({"file1.js": "var a = function() {};"}, {\n    sourceMap: {\n        filename: "out.js",\n        url: "out.js.map"\n    }\n});\nconsole.log(result.code); // minified output\nconsole.log(result.map);  // source map\n')),(0,i.kt)("p",null,"Note that the source map is not saved in a file, it's just returned in\n",(0,i.kt)("inlineCode",{parentName:"p"},"result.map"),".  The value passed for ",(0,i.kt)("inlineCode",{parentName:"p"},"sourceMap.url")," is only used to set\n",(0,i.kt)("inlineCode",{parentName:"p"},"//# sourceMappingURL=out.js.map")," in ",(0,i.kt)("inlineCode",{parentName:"p"},"result.code"),". The value of\n",(0,i.kt)("inlineCode",{parentName:"p"},"filename")," is only used to set ",(0,i.kt)("inlineCode",{parentName:"p"},"file")," attribute (see ","[the spec][sm-spec]",")\nin source map file."),(0,i.kt)("p",null,"You can set option ",(0,i.kt)("inlineCode",{parentName:"p"},"sourceMap.url")," to be ",(0,i.kt)("inlineCode",{parentName:"p"},'"inline"')," and source map will\nbe appended to code."),(0,i.kt)("p",null,"You can also specify sourceRoot property to be included in source map:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'var result = await minify({"file1.js": "var a = function() {};"}, {\n    sourceMap: {\n        root: "http://example.com/src",\n        url: "out.js.map"\n    }\n});\n')),(0,i.kt)("p",null,"If you're compressing compiled JavaScript and have a source map for it, you\ncan use ",(0,i.kt)("inlineCode",{parentName:"p"},"sourceMap.content"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'var result = await minify({"compiled.js": "compiled code"}, {\n    sourceMap: {\n        content: "content from compiled.js.map",\n        url: "minified.js.map"\n    }\n});\n// same as before, it returns `code` and `map`\n')),(0,i.kt)("p",null,"If you're using the ",(0,i.kt)("inlineCode",{parentName:"p"},"X-SourceMap")," header instead, you can just omit ",(0,i.kt)("inlineCode",{parentName:"p"},"sourceMap.url"),"."),(0,i.kt)("p",null,"If you happen to need the source map as a raw object, set ",(0,i.kt)("inlineCode",{parentName:"p"},"sourceMap.asObject")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"."))}u.isMDXComponent=!0}}]);